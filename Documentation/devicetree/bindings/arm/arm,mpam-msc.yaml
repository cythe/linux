# SPDX-License-Identifier: GPL-2.0 OR BSD-2-Clause
%YAML 1.2
---
$id: http://devicetree.org/schemas/arm/arm,mpam-msc.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: ARM MPAM

maintainers:
  - Rob Herring <robh@kernel.org>

properties:
  compatible:
    const: arm,mpam-msc    # Further details are discoverable

  reg:
    maxItems: 1

  interrupts:
    minItems: 1
    maxItems: 2
    items:
      - description: error (optional)
      - description: overflow (only for monitoring)

  interrupt-names:
    oneOf:
      - items:
          - enum: [ error, overflow ]
      - items:
          - const: error
          - const: overflow

  arm,max-nrdy-usec:
    description: |
      The maximum time that any coutner in the MSC's NRDY bit may be 1.

  numa-node-id: true # see NUMA binding

patternProperties:
  '^ris@[0-9a-f]$':
    type: object
    description: |
      RIS nodes for each RIS in an MSC. These nodes are only necessary if the
      MSC and its RISs are not associated with the MSC parent device. IOW, the
      RIS nodes are only needed if associated with different components in the
      memory system hierarchy.

      A possible exception would be if we need to associate each RIS with an
      component of the parent device. For example, which devices or TBU for an
      IOMMU are associated with a RIS and this can't be implied by the parent
      device.

    properties:
      reg:
        minimum: 0
        maximum: 15

      cpus:
        $ref: '/schemas/types.yaml#/definitions/phandle'
        description:
          A phandle to the CPU node this RIS belongs to.

      # Note 'cpus' is already established for CPU affinity phandles. For the
      # other types, MPAM specific names or not???
      arm,mpam-cache:
        $ref: '/schemas/types.yaml#/definitions/phandle'
        description:
          A phandle to the cache node this RIS belongs to.

      arm,mpam-iommu:
        $ref: '/schemas/types.yaml#/definitions/phandle'
        description:
          A phandle to the IOMMU node this RIS belongs to.

      arm,mpam-memory:
        $ref: '/schemas/types.yaml#/definitions/phandle'
        description:
          A phandle to the memory node this RIS belongs to.

required:
  - compatible
  - reg

additionalProperties: false

examples:
  - |
    cpus {
        cpu@0 {
            next-level-cache = <&L2_0>;
        };
        cpu@100 {
            next-level-cache = <&L2_1>;
        };
    };

    L2_0: cache-controller {
        compatible = "cache";
        cache-level = <2>;

        power-domains = <&pdc 1>;

        msc@1000 {
            compatible = "arm,mpam-msc";

            /* CPU affinity implied by cache association with cpu@0 */
            reg = <0x1000 0x1000>;
            interrupts = <1>, <2>;
            interrupt-names = "error", "overflow";
            arm,max-nrdy-usec = <1>;
        };
    };

    mem: memory-controller@20000 {
        reg = <0x20000 0x1000>;
        ranges;

        msc@21000 {
            compatible = "arm,mpam-msc";
            reg = <0x21000 0x1000>;
            interrupts = <3>;
            interrupt-names = "error";
            arm,max-nrdy-usec = <1>;
            numa-node-id = <1>;
        };
    };

    iommu@40000 {
        reg = <0x40000 0x1000>;
        ranges;

        msc@41000 {
            compatible = "arm,mpam-msc";
            reg = <0 0x1000>;
            interrupts = <5>, <6>;
            interrupt-names = "error", "overflow";
            arm,max-nrdy-usec = <1>;

            ris@0 {
                reg = <0>;
                // How to map to device(s)?
            };

        };
    };

    msc@80000 {
        compatible = "partner,a-standalone-msc", "arm,mpam-msc";
        reg = <0 0x80000>;
        interrupts = <7>, <8>;

        clocks = <&clks 123>;

        ris@0 {
            reg = <0>;
            arm,msc-cache = <&L2_0>;
        };

        ris@1 {
            reg = <1>;
            arm,msc-memory = <&mem>;
        };

    };

...
